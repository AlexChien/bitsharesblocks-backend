#!/usr/bin/env node
var posix = require('posix');
// raise maximum number of open file descriptors to 10k,
// hard limit is left unchanged
console.log(posix.getrlimit('nofile'));
posix.setrlimit('nofile', { soft: 10000, hard:10000 });

// Include the cluster module
var cluster = require('cluster');
var config = require('../../config.json');
var http = require('http');
var https = require('https');
var fs = require('fs');


// HTTPS server options
// files = [
//   "AddTrustExternalCARoot.crt",
//   "COMODORSAAddTrustCA.crt",
//   "COMODORSADomainValidationSecureServerCA.crt"
// ];

// ca = [];
// files.forEach(function(file) {
//   ca.push(fs.readFileSync('/ssl_location/'+file));
// });
// var https_options = {
//   key: fs.readFileSync('/ssl_location/key.pem'),
//   cert: fs.readFileSync('/ssl_location/cert.crt'),
//   ca: ca
// };

// Code to run if we're in the master process
if (cluster.isMaster) {
  // Count the machine's CPUs
  var cpuCount = require('os').cpus().length;
  console.log(cpuCount);
  // Create a worker for each CPU
  for (var i = 0; i < 2; i += 1) {
    console.log('spawing worker: '+i);
    cluster.fork();
  }
}
else {
  var debug = require('debug')('app');
  var app = require('../backend-server');

  // app.set('port', process.env.PORT || config.server_port);
  console.log('Express http listening on port:',config.server_port,' PID: ',process.pid);
  http.createServer(app).listen(config.server_port);
  // console.log('Express https listening on port:',443,' PID: ',process.pid);
  // https.createServer(https_options, app).listen(443);
}
